/* 
NO ACTION REQUIRED BY YOU

Don't worry about this section.  These CSS styles are here to make the HTML document look cleaner, but are not part of the lesson.

Just write your HTML however you want and these will automatically work.
*/

/* body {
    background-color: #1D2326;
    color: #BFA38A;
    font-family: monospace;
  }
  
  main {
    display: flex;
    flex-direction: row;
  }
  
  img {
    border: 1px solid white;
    border-radius: 5px;
    max-width: 350px;
    width: 100%;
  }
  
  p {
    color: #8097A6;
  }
  
  .attribution {
    position: absolute;
    right: 20px;
    bottom: 20px;
    font-size: 0.8rem;
    background-color: #8097A6;
    padding: 10px;
    border-radius: 5px;
    color: #1D2326;
    box-shadow: 1px 2px 5px 1px rgba(255,255,255, 0.2);
  }
  
  a {
    color: white;
  }
  
  a:hover {
    opacity: 0.8;
  }
  
  .content {
    width: 65%;
    padding-left: 30px;
    padding-right: 20px;
  }
  
  .content p {
    max-width: 80%;
  }
  
  .sidebar {
    display: flex;
    flex-direction: column;
    width: 30%;
    padding-left: 30px;
    padding-right: 30px;
    border-left: 1px dotted #BFA38A;
    height: 85vh;
  }
  
  button {
    width: 200px;
    max-width: 100%;
    margin-top: 10px;
    margin-bottom: 10px;
    height: 35px;
    border: 1px solid #BFA38A;
    background: transparent;
    color: #BFA38A;
    border-radius: 5px;
  }
  
  button:hover {
    cursor: pointer;
    background-color: rgba(255,255,255,0.1)
  }
  
  .reveal-btn {
    border: none;
    text-decoration: underline;
    margin: 0;
  }
  
  .reveal-btn:hover {
    color: white;
    background-color: transparent;
  } */

  /*I have start my CSS classes down here!*/
  /* p {
    padding: 20px;
    margin: 20px;
    height: 20px;
    width: 120px;
    border: 5px solid black;
  } */


/* 
Example of position: relative */

      /* .relative-box {
        position: relative;
        background-color: lightblue;
        width: 100px;
        height: 100px;
        top: 10px;  Moves the element 10px down 
        left: 20px;  Moves the element 20px to the right 
      }
      .next-box {
        background-color: lightcoral;
        width: 100px;
        height: 100px;
        margin-top: 20px;  Adds space between the elements for better visualization 
      }
    
     */
 
/* Example of position: absolute  */
  
  /* .relative-container {
    position: relative;
    width: 300px;
    height: 300px;
    background-color: lightgrey;
  }
  
  .absolute-box {
    position: absolute;
    background-color: lightblue;
    width: 100px;
    height: 100px;
    top: 20px;
    left: 30px;
    z-index: 10; Creates a new stacking context 
    margin: 20px;  Margins do not collapse 
  }
  
  .next-box {
    background-color: lightcoral;
    width: 100px;
    height: 100px;
    position: relative;
    top: -50px;
    left: 50px;
  } */


  /* Example of position: fixed */
/* 
      .fixed-box {
        position: fixed;
        background-color: lightblue;
        width: 100px;
        height: 100px;
        top: 20px;  Positioned 20px from the top of the viewport 
        left: 30px;  Positioned 30px from the left of the viewport 
        z-index: 10;  Higher stacking order
      }

      .next-box {
        background-color: lightcoral;
        width: 100px;
        height: 100px;
        position: relative; This element is in normal flow 
        top: 100px;
        left: 50px;
      } */
    
      /* A Systematic Way to Write CSS Effectively */

      .container {
        display: flex;
        flex-direction: row;
      }
      
      .box-1,
      .box-2 {
        flex: 50%;
      }

